/**********************************************************
         AUTO GENERATED FILE BY sox_code_generator
                   DO NOT EDIT THIS FILE
**********************************************************/
#include "merchant2.h"

#include "lib/common/stream/stream_reader.h"
#include "lib/game_base/data/sox/sox_file.h"
#include "lib/game_data/game_data_registry.h"

namespace cebreiro::gamedata
{
	[[maybe_unused]]
	static GameDataRegistry<Merchant2Table> registry;

	Merchant2::Merchant2(StreamReader& reader)
	{
		index = reader.ReadInt32();
		name = reader.ReadString(reader.ReadUInt16());
		type = reader.ReadInt32();
		buyingFactor = reader.ReadInt32();
		sellingFactor = reader.ReadInt32();
		item01 = reader.ReadInt32();
		item02 = reader.ReadInt32();
		item03 = reader.ReadInt32();
		item04 = reader.ReadInt32();
		item05 = reader.ReadInt32();
		item06 = reader.ReadInt32();
		item07 = reader.ReadInt32();
		item08 = reader.ReadInt32();
		item09 = reader.ReadInt32();
		item10 = reader.ReadInt32();
		item11 = reader.ReadInt32();
		item12 = reader.ReadInt32();
		item13 = reader.ReadInt32();
		item14 = reader.ReadInt32();
		item15 = reader.ReadInt32();
		item16 = reader.ReadInt32();
		item17 = reader.ReadInt32();
		item18 = reader.ReadInt32();
		item19 = reader.ReadInt32();
		item20 = reader.ReadInt32();
		item21 = reader.ReadInt32();
		item22 = reader.ReadInt32();
		item23 = reader.ReadInt32();
		item24 = reader.ReadInt32();
		item25 = reader.ReadInt32();
		item26 = reader.ReadInt32();
		item27 = reader.ReadInt32();
		item28 = reader.ReadInt32();
		item29 = reader.ReadInt32();
		item30 = reader.ReadInt32();
		item31 = reader.ReadInt32();
		item32 = reader.ReadInt32();
		item33 = reader.ReadInt32();
		item34 = reader.ReadInt32();
		item35 = reader.ReadInt32();
		item36 = reader.ReadInt32();
		item37 = reader.ReadInt32();
		item38 = reader.ReadInt32();
		item39 = reader.ReadInt32();
		item40 = reader.ReadInt32();
		item41 = reader.ReadInt32();
		item42 = reader.ReadInt32();
		item43 = reader.ReadInt32();
		item44 = reader.ReadInt32();
		item45 = reader.ReadInt32();
		item46 = reader.ReadInt32();
		item47 = reader.ReadInt32();
		item48 = reader.ReadInt32();
		item49 = reader.ReadInt32();
		item50 = reader.ReadInt32();
		item51 = reader.ReadInt32();
		item52 = reader.ReadInt32();
		item53 = reader.ReadInt32();
		item54 = reader.ReadInt32();
		item55 = reader.ReadInt32();
		item56 = reader.ReadInt32();
		item57 = reader.ReadInt32();
		item58 = reader.ReadInt32();
		item59 = reader.ReadInt32();
		item60 = reader.ReadInt32();
		item61 = reader.ReadInt32();
		item62 = reader.ReadInt32();
		item63 = reader.ReadInt32();
		item64 = reader.ReadInt32();
		item65 = reader.ReadInt32();
		item66 = reader.ReadInt32();
		item67 = reader.ReadInt32();
		item68 = reader.ReadInt32();
		item69 = reader.ReadInt32();
		item70 = reader.ReadInt32();
		item71 = reader.ReadInt32();
		item72 = reader.ReadInt32();
		item73 = reader.ReadInt32();
		item74 = reader.ReadInt32();
		item75 = reader.ReadInt32();
		item76 = reader.ReadInt32();
		item77 = reader.ReadInt32();
		item78 = reader.ReadInt32();
		item79 = reader.ReadInt32();
		item80 = reader.ReadInt32();
	}

	void Merchant2Table::LoadFromFile(const std::filesystem::path& path)
	{
		gamebase::SoxFile fileData(path / "merchant2.sox");
		StreamReader reader(fileData.gameData.data(), fileData.gameData.size());

		_vector.reserve(fileData.rowCount);
		for (int32_t i = 0; i < fileData.rowCount; ++i)
		{
			_vector.emplace_back(reader);
		}

		for (const Merchant2& data : _vector)
		{
			_umap[data.index] = &data;
		}
	}

	auto Merchant2Table::Find(int32_t index) const -> const Merchant2*
	{
		auto iter = _umap.find(index);
		return iter != _umap.end() ? iter->second : nullptr;
	}

	auto Merchant2Table::Get() const -> const std::vector<Merchant2>&
	{
		return _vector;
	}
}
