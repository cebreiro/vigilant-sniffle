/**********************************************************
         AUTO GENERATED FILE BY sox_code_generator
                   DO NOT EDIT THIS FILE
**********************************************************/
#pragma once
#include <cstdint>
#include <string>
#include <vector>
#include <unordered_map>
#include <filesystem>
#include "lib/game_data/game_data_table.h"

namespace cebreiro { class StreamReader; }

namespace cebreiro::gamedata
{
	struct ItemCombination
	{
		ItemCombination() = default;
		explicit ItemCombination(StreamReader& reader);

		int32_t index = 0;
		int32_t type = 0;
		int32_t result = 0;
		int32_t job = 0;
		int32_t level = 0;
		int32_t ability = 0;
		int32_t whenFails = 0;
		int32_t failExp = 0;
		int32_t orgMod1 = 0;
		int32_t orgMod2 = 0;
		int32_t req1 = 0;
		int32_t req2 = 0;
		int32_t req3 = 0;
		int32_t req4 = 0;
		int32_t req5 = 0;
		int32_t req6 = 0;
		int32_t req7 = 0;
		int32_t req8 = 0;
		int32_t req9 = 0;
		int32_t req1num = 0;
		int32_t req2num = 0;
		int32_t req3num = 0;
		int32_t req4num = 0;
		int32_t req5num = 0;
		int32_t req6num = 0;
		int32_t req7num = 0;
		int32_t req8num = 0;
		int32_t req9num = 0;
	};

	class ItemCombinationTable : public GameDataTable
	{
	public:
		 static constexpr int64_t INDEX = 28;

	public:
		void LoadFromFile(const std::filesystem::path& path);

		auto Find(int32_t index) const -> const ItemCombination*;
		auto Get() const -> const std::vector<ItemCombination>&;

	private:
		std::vector<ItemCombination> _vector;
		std::unordered_map<int32_t, const ItemCombination*> _umap;
	};
}
