/**********************************************************
         AUTO GENERATED FILE BY sox_code_generator
                   DO NOT EDIT THIS FILE
**********************************************************/
#pragma once
#include <cstdint>
#include <string>
#include <vector>
#include <unordered_map>
#include <filesystem>
#include "lib/game_data/game_data_table.h"

namespace cebreiro { class StreamReader; }

namespace cebreiro::gamedata
{
	struct MinigameUfo
	{
		MinigameUfo() = default;
		explicit MinigameUfo(StreamReader& reader);

		int32_t index = 0;
		std::string ufoname;
		int32_t cost = 0;
		int32_t velocity = 0;
		int32_t accel = 0;
		int32_t radius = 0;
		int32_t mingaugespeed = 0;
		int32_t maxgaugespeed = 0;
		int32_t mingaugemove = 0;
		int32_t maxgaugemove = 0;
		int32_t maxRarity = 0;
		int32_t respawnTime = 0;
		int32_t item1 = 0;
		int32_t item2 = 0;
		int32_t item3 = 0;
		int32_t item4 = 0;
		int32_t item5 = 0;
		int32_t item6 = 0;
	};

	class MinigameUfoTable : public GameDataTable
	{
	public:
		 static constexpr int64_t INDEX = 50;

	public:
		void LoadFromFile(const std::filesystem::path& path);

		auto Find(int32_t index) const -> const MinigameUfo*;
		auto Get() const -> const std::vector<MinigameUfo>&;

	private:
		std::vector<MinigameUfo> _vector;
		std::unordered_map<int32_t, const MinigameUfo*> _umap;
	};
}
