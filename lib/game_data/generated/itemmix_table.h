/**********************************************************
         AUTO GENERATED FILE BY sox_code_generator
                   DO NOT EDIT THIS FILE
**********************************************************/
#pragma once
#include <cstdint>
#include <string>
#include <vector>
#include <unordered_map>
#include <filesystem>
#include "lib/game_data/game_data_table.h"

namespace cebreiro { class StreamReader; }

namespace cebreiro::gamedata
{
	struct ItemmixTable
	{
		ItemmixTable() = default;
		explicit ItemmixTable(StreamReader& reader);

		int32_t index = 0;
		int32_t groupID = 0;
		std::string name;
		int32_t gradeTableType = 0;
		int32_t mixTime = 0;
		int32_t difficulty = 0;
		int32_t resultID = 0;
		int32_t resultMax = 0;
		int32_t count = 0;
		int32_t material1ID = 0;
		std::string material1Name;
		int32_t material1NU = 0;
		int32_t material2ID = 0;
		std::string material2Name;
		int32_t material2NU = 0;
		int32_t material3ID = 0;
		std::string material3Name;
		int32_t material3NU = 0;
		int32_t material4ID = 0;
		std::string material4Name;
		int32_t material4NU = 0;
		int32_t maxDepth = 0;
		int32_t depthID1 = 0;
		int32_t depthID2 = 0;
		int32_t depthID3 = 0;
		int32_t depthID4 = 0;
		int32_t expCorrect = 0;
	};

	class ItemmixTableTable : public GameDataTable
	{
	public:
		 static constexpr int64_t INDEX = 24;

	public:
		void LoadFromFile(const std::filesystem::path& path);

		auto Find(int32_t index) const -> const ItemmixTable*;
		auto Get() const -> const std::vector<ItemmixTable>&;

	private:
		std::vector<ItemmixTable> _vector;
		std::unordered_map<int32_t, const ItemmixTable*> _umap;
	};
}
