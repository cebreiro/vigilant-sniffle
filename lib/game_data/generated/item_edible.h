/**********************************************************
         AUTO GENERATED FILE BY sox_code_generator
                   DO NOT EDIT THIS FILE
**********************************************************/
#pragma once
#include <cstdint>
#include <string>
#include <vector>
#include <unordered_map>
#include <filesystem>
#include "lib/game_data/game_data_table.h"

namespace cebreiro { class StreamReader; }

namespace cebreiro::gamedata
{
	struct ItemEdible
	{
		ItemEdible() = default;
		explicit ItemEdible(StreamReader& reader);

		int32_t index = 0;
		std::string name;
		int32_t generate = 0;
		std::string explanation;
		int32_t invenWidth = 0;
		int32_t invenHeight = 0;
		int32_t maxOverlapCount = 0;
		int32_t rarity = 0;
		int32_t price = 0;
		int32_t modelID = 0;
		int32_t modelColor = 0;
		int32_t dropSound = 0;
		int32_t useQuickSlot = 0;
		int32_t oneMoreItem = 0;
		int32_t equipPos = 0;
		int32_t eatClass = 0;
		int32_t effect1 = 0;
		int32_t effectDuration1 = 0;
		int32_t effectValue1 = 0;
		int32_t effectPercent1 = 0;
		int32_t effectReservedA1 = 0;
		int32_t effectReservedB1 = 0;
		int32_t effect2 = 0;
		int32_t effectDuration2 = 0;
		int32_t effectValue2 = 0;
		int32_t effectPercent2 = 0;
		int32_t effectReservedA2 = 0;
		int32_t effectReservedB2 = 0;
		int32_t effect3 = 0;
		int32_t effectDuration3 = 0;
		int32_t effectValue3 = 0;
		int32_t effectPercent3 = 0;
		int32_t effectReservedA3 = 0;
		int32_t effectReservedB3 = 0;
		int32_t effect4 = 0;
		int32_t effectDuration4 = 0;
		int32_t effectValue4 = 0;
		int32_t effectPercent4 = 0;
		int32_t effectReservedA4 = 0;
		int32_t effectReservedB4 = 0;
		int32_t effectSound = 0;
		int32_t ableToSell = 0;
		int32_t ableToTrade = 0;
		int32_t ableToDrop = 0;
		int32_t ableToDestroy = 0;
		int32_t ableToStorage = 0;
		int32_t conID = 0;
		int32_t conRangeTime = 0;
		int32_t reservedParam1 = 0;
		int32_t reservedParam2 = 0;
		int32_t reservedParam3 = 0;
		int32_t reservedParam4 = 0;
		int32_t reservedParam5 = 0;
		int32_t reservedParam6 = 0;
		int32_t reservedParam7 = 0;
	};

	class ItemEdibleTable : public GameDataTable
	{
	public:
		 static constexpr int64_t INDEX = 29;

	public:
		void LoadFromFile(const std::filesystem::path& path);

		auto Find(int32_t index) const -> const ItemEdible*;
		auto Get() const -> const std::vector<ItemEdible>&;

	private:
		std::vector<ItemEdible> _vector;
		std::unordered_map<int32_t, const ItemEdible*> _umap;
	};
}
