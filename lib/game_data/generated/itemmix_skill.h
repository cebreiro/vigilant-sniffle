/**********************************************************
         AUTO GENERATED FILE BY sox_code_generator
                   DO NOT EDIT THIS FILE
**********************************************************/
#pragma once
#include <cstdint>
#include <string>
#include <vector>
#include <unordered_map>
#include <filesystem>
#include "lib/game_data/game_data_table.h"

namespace cebreiro { class StreamReader; }

namespace cebreiro::gamedata
{
	struct ItemmixSkill
	{
		ItemmixSkill() = default;
		explicit ItemmixSkill(StreamReader& reader);

		int32_t index = 0;
		int32_t iD = 0;
		std::string name;
		int32_t type = 0;
		int32_t difficultyType = 0;
		int32_t requiredJobID = 0;
		int32_t requiredJobLevel = 0;
		int32_t requiredSkillID = 0;
		int32_t requiredSkillLevel = 0;
		int32_t mixGroupID1 = 0;
		int32_t mixGroupID1Level = 0;
		int32_t mixGroupID2 = 0;
		int32_t mixGroupID2Level = 0;
		int32_t mixGroupID3 = 0;
		int32_t mixGroupID3Level = 0;
		int32_t mixGroupID4 = 0;
		int32_t mixGroupID4Level = 0;
		int32_t mixGroupID5 = 0;
		int32_t mixGroupID5Level = 0;
		int32_t mixGroupID6 = 0;
		int32_t mixGroupID6Level = 0;
		std::string skillDescription;
		int32_t maxDepth = 0;
		int32_t maxDepthWide1 = 0;
		std::string depthName11;
		int32_t depthID11 = 0;
		std::string categoryDes11;
		int32_t depthTxID11 = 0;
		int32_t depthTxNum11 = 0;
		std::string depthName12;
		int32_t depthID12 = 0;
		std::string categoryDes12;
		int32_t depthTxID12 = 0;
		int32_t depthTxNum12 = 0;
		std::string depthName13;
		int32_t depthID13 = 0;
		std::string categoryDes13;
		int32_t depthTxID13 = 0;
		int32_t depthTxNum13 = 0;
		std::string depthName14;
		int32_t depthID14 = 0;
		std::string categoryDes14;
		int32_t depthTxID14 = 0;
		int32_t depthTxNum14 = 0;
		std::string depthName15;
		int32_t depthID15 = 0;
		std::string categoryDes15;
		int32_t depthTxID15 = 0;
		int32_t depthTxNum15 = 0;
		std::string depthName16;
		int32_t depthID16 = 0;
		std::string categoryDes16;
		int32_t depthTxID16 = 0;
		int32_t depthTxNum16 = 0;
		int32_t maxDepthWide2 = 0;
		std::string depthName21;
		int32_t depthID21 = 0;
		std::string categoryDes21;
		int32_t depthTxID21 = 0;
		int32_t depthTxNum21 = 0;
		std::string depthName22;
		int32_t depthID22 = 0;
		std::string categoryDes22;
		int32_t depthTxID22 = 0;
		int32_t depthTxNum22 = 0;
		std::string depthName23;
		int32_t depthID23 = 0;
		std::string categoryDes23;
		int32_t depthTxID23 = 0;
		int32_t depthTxNum23 = 0;
		std::string depthName24;
		int32_t depthID24 = 0;
		std::string categoryDes24;
		int32_t depthTxID24 = 0;
		int32_t depthTxNum24 = 0;
		int32_t maxDepthWide3 = 0;
		std::string depthName31;
		int32_t depthID31 = 0;
		std::string categoryDes31;
		int32_t depthTxID31 = 0;
		int32_t depthTxNum31 = 0;
		std::string depthName32;
		int32_t depthID32 = 0;
		std::string categoryDes32;
		int32_t depthTxID32 = 0;
		int32_t depthTxNum32 = 0;
		std::string depthName33;
		int32_t depthID33 = 0;
		std::string categoryDes33;
		int32_t depthTxID33 = 0;
		int32_t depthTxNum33 = 0;
		std::string depthName34;
		int32_t depthID34 = 0;
		std::string categoryDes34;
		int32_t depthTxID34 = 0;
		int32_t depthTxNum34 = 0;
	};

	class ItemmixSkillTable : public GameDataTable
	{
	public:
		 static constexpr int64_t INDEX = 21;

	public:
		void LoadFromFile(const std::filesystem::path& path);

		auto Find(int32_t index) const -> const ItemmixSkill*;
		auto Get() const -> const std::vector<ItemmixSkill>&;

	private:
		std::vector<ItemmixSkill> _vector;
		std::unordered_map<int32_t, const ItemmixSkill*> _umap;
	};
}
