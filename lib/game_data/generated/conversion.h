/**********************************************************
         AUTO GENERATED FILE BY sox_code_generator
                   DO NOT EDIT THIS FILE
**********************************************************/
#pragma once
#include <cstdint>
#include <string>
#include <vector>
#include <unordered_map>
#include <filesystem>
#include "lib/game_data/game_data_table.h"

namespace cebreiro { class StreamReader; }

namespace cebreiro::gamedata
{
	struct Conversion
	{
		Conversion() = default;
		explicit Conversion(StreamReader& reader);

		int32_t index = 0;
		int32_t strPhysHit = 0;
		int32_t strHp = 0;
		int32_t dexHitAccuracy = 0;
		int32_t dexEvade = 0;
		int32_t dexPhysHit = 0;
		int32_t constHp = 0;
		int32_t constPhysDefense = 0;
		int32_t intSp = 0;
		int32_t intAbilityAttack = 0;
		int32_t intAbilityAccuracy = 0;
		int32_t willPhysDefense = 0;
		int32_t willSp = 0;
		int32_t willAbilityAttack = 0;
		int32_t willAbilityAccuracy = 0;
		int32_t elemAttack = 0;
		int32_t elemDefense = 0;
		float rarityProbability = 0.f;
		int32_t rarityMoney = 0;
		int32_t rarityLifetime = 0;
		float constHPRecoveryRate = 0.f;
		float willSPRecoveryRate = 0.f;
		float strNPDecreaseRate = 0.f;
		int32_t dexSpeed = 0;
		int32_t dexAttackSpeed = 0;
		int32_t dexAttackDelay = 0;
		float levelDiffExpRate = 0.f;
		float levelFactorForHospital = 0.f;
		int32_t intCombination = 0;
		int32_t rarityExp = 0;
		float levelExpPenalty = 0.f;
		float willResist = 0.f;
		int32_t levelExpDistribution = 0;
		int32_t levelAbnormalityProb = 0;
	};

	class ConversionTable : public GameDataTable
	{
	public:
		 static constexpr int64_t INDEX = 7;

	public:
		void LoadFromFile(const std::filesystem::path& path);

		auto Find(int32_t index) const -> const Conversion*;
		auto Get() const -> const std::vector<Conversion>&;

	private:
		std::vector<Conversion> _vector;
		std::unordered_map<int32_t, const Conversion*> _umap;
	};
}
