/**********************************************************
         AUTO GENERATED FILE BY sox_code_generator
                   DO NOT EDIT THIS FILE
**********************************************************/
#pragma once
#include <cstdint>
#include <string>
#include <vector>
#include <unordered_map>
#include <filesystem>
#include "lib/game_data/game_data_table.h"

namespace cebreiro { class StreamReader; }

namespace cebreiro::gamedata
{
	struct SkillBasic
	{
		SkillBasic() = default;
		explicit SkillBasic(StreamReader& reader);

		int32_t index = 0;
		std::string name;
		int32_t routineId = 0;
		int32_t abilityType = 0;
		int32_t job1 = 0;
		int32_t job2 = 0;
		int32_t job3 = 0;
		int32_t degree = 0;
		int32_t maxLevel = 0;
		int32_t delayId = 0;
		int32_t canSubjob = 0;
		int32_t levelQualification = 0;
		int32_t ability1Qualification = 0;
		int32_t ability1Level = 0;
		int32_t ability2Qualification = 0;
		int32_t ability2Level = 0;
		int32_t passive = 0;
		int32_t spConsumption = 0;
		int32_t spConsumptionDelay = 0;
		int32_t furyOnly = 0;
		int32_t requireItem = 0;
		int32_t requireItemCount = 0;
		float motionSpeed = 0.f;
		int32_t needWeapon = 0;
		int32_t delayType = 0;
		int32_t delayTime = 0;
		int32_t useType = 0;
		int32_t applyTargetType = 0;
		int32_t applyDamageType = 0;
		int32_t damageLength = 0;
		int32_t damageLength2 = 0;
		int32_t damageMaxcount = 0;
		int32_t cancelable = 0;
		int32_t useRange = 0;
		int32_t addWeaponRange = 0;
		int32_t applyCasting = 0;
		int32_t castingDelay = 0;
		int32_t applyCharging = 0;
		int32_t chargingDelay = 0;
		int32_t damageMotionType = 0;
		int32_t effect1 = 0;
		int32_t effect1Type = 0;
		int32_t effect1Reserved1 = 0;
		int32_t effect1Reserved2 = 0;
		int32_t effect1Reserved3 = 0;
		int32_t effect1Reserved4 = 0;
		int32_t effect1Reserved5 = 0;
		int32_t effect1Reserved6 = 0;
		int32_t effect1Reserved7 = 0;
		int32_t effect1Reserved8 = 0;
		int32_t effect1Reserved9 = 0;
		int32_t effect1Reserved10 = 0;
		int32_t effect1Reserved11 = 0;
		int32_t effect1Reserved12 = 0;
		int32_t effect1HopType = 0;
		int32_t effect1HopA = 0;
		int32_t effect1HopB = 0;
		int32_t effect2 = 0;
		int32_t effect2Type = 0;
		int32_t effect2Reserved1 = 0;
		int32_t effect2Reserved2 = 0;
		int32_t effect2Reserved3 = 0;
		int32_t effect2Reserved4 = 0;
		int32_t effect2Reserved5 = 0;
		int32_t effect2Reserved6 = 0;
		int32_t effect2Reserved7 = 0;
		int32_t effect2Reserved8 = 0;
		int32_t effect2Reserved9 = 0;
		int32_t effect2Reserved10 = 0;
		int32_t effect2Reserved11 = 0;
		int32_t effect2Reserved12 = 0;
		int32_t effect2HopType = 0;
		int32_t effect2HopA = 0;
		int32_t effect2HopB = 0;
		int32_t effect3 = 0;
		int32_t effect3Type = 0;
		int32_t effect3Reserved1 = 0;
		int32_t effect3Reserved2 = 0;
		int32_t effect3Reserved3 = 0;
		int32_t effect3Reserved4 = 0;
		int32_t effect3Reserved5 = 0;
		int32_t effect3Reserved6 = 0;
		int32_t effect3Reserved7 = 0;
		int32_t effect3Reserved8 = 0;
		int32_t effect3Reserved9 = 0;
		int32_t effect3Reserved10 = 0;
		int32_t effect3Reserved11 = 0;
		int32_t effect3Reserved12 = 0;
		int32_t effect3HopType = 0;
		int32_t effect3HopA = 0;
		int32_t effect3HopB = 0;
		int32_t effect4 = 0;
		int32_t effect4Type = 0;
		int32_t effect4Reserved1 = 0;
		int32_t effect4Reserved2 = 0;
		int32_t effect4Reserved3 = 0;
		int32_t effect4Reserved4 = 0;
		int32_t effect4Reserved5 = 0;
		int32_t effect4Reserved6 = 0;
		int32_t effect4Reserved7 = 0;
		int32_t effect4Reserved8 = 0;
		int32_t effect4Reserved9 = 0;
		int32_t effect4Reserved10 = 0;
		int32_t effect4Reserved11 = 0;
		int32_t effect4Reserved12 = 0;
		int32_t effect4HopType = 0;
		int32_t effect4HopA = 0;
		int32_t effect4HopB = 0;
	};

	class SkillBasicTable : public GameDataTable
	{
	public:
		 static constexpr int64_t INDEX = 74;

	public:
		void LoadFromFile(const std::filesystem::path& path);

		auto Find(int32_t index) const -> const SkillBasic*;
		auto Get() const -> const std::vector<SkillBasic>&;

	private:
		std::vector<SkillBasic> _vector;
		std::unordered_map<int32_t, const SkillBasic*> _umap;
	};
}
