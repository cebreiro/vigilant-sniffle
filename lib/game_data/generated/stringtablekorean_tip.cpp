/**********************************************************
         AUTO GENERATED FILE BY sox_code_generator
                   DO NOT EDIT THIS FILE
**********************************************************/
#include "stringtablekorean_tip.h"

#include "lib/common/stream/stream_reader.h"
#include "lib/game_base/data/sox/sox_file.h"
#include "lib/game_data/game_data_registry.h"

namespace cebreiro::gamedata
{
	[[maybe_unused]]
	static GameDataRegistry<StringtablekoreanTipTable> registry;

	StringtablekoreanTip::StringtablekoreanTip(StreamReader& reader)
	{
		index = reader.ReadInt32();
		string = reader.ReadString(reader.ReadUInt16());
		desc = reader.ReadString(reader.ReadUInt16());
	}

	void StringtablekoreanTipTable::LoadFromFile(const std::filesystem::path& path)
	{
		gamebase::SoxFile fileData(path / "STRINGTABLEKOREAN_TIP.sox");
		StreamReader reader(fileData.gameData.data(), fileData.gameData.size());

		_vector.reserve(fileData.rowCount);
		for (int32_t i = 0; i < fileData.rowCount; ++i)
		{
			_vector.emplace_back(reader);
		}

		for (const StringtablekoreanTip& data : _vector)
		{
			_umap[data.index] = &data;
		}
	}

	auto StringtablekoreanTipTable::Find(int32_t index) const -> const StringtablekoreanTip*
	{
		auto iter = _umap.find(index);
		return iter != _umap.end() ? iter->second : nullptr;
	}

	auto StringtablekoreanTipTable::Get() const -> const std::vector<StringtablekoreanTip>&
	{
		return _vector;
	}
}
