/**********************************************************
         AUTO GENERATED FILE BY sox_code_generator
                   DO NOT EDIT THIS FILE
**********************************************************/
#include "skill_action.h"

#include "lib/common/stream/stream_reader.h"
#include "lib/game_base/data/sox/sox_file.h"
#include "lib/game_data/game_data_registry.h"

namespace cebreiro::gamedata
{
	[[maybe_unused]]
	static GameDataRegistry<SkillActionTable> registry;

	SkillAction::SkillAction(StreamReader& reader)
	{
		index = reader.ReadInt32();
		type = reader.ReadInt32();
		reserved1 = reader.ReadInt32();
		reserved2 = reader.ReadInt32();
		reserved3 = reader.ReadInt32();
		charge1FxGid = reader.ReadInt32();
		charge1FxPid = reader.ReadInt32();
		charge2FxGid = reader.ReadInt32();
		charge2FxPid = reader.ReadInt32();
		shockFxGid = reader.ReadInt32();
		shockFxPid = reader.ReadInt32();
		_1handswordCharge1Pid = reader.ReadInt32();
		_2handswordCharge1Pid = reader.ReadInt32();
		heavyswordCharge1Pid = reader.ReadInt32();
		hammerCharge1Pid = reader.ReadInt32();
		axeCharge1Pid = reader.ReadInt32();
		spearCharge1Pid = reader.ReadInt32();
		polearmCharge1Pid = reader.ReadInt32();
		knuckleCharge1Pid = reader.ReadInt32();
		dartCharge1Pid = reader.ReadInt32();
		gunCharge1Pid = reader.ReadInt32();
		doublegunCharge1Pid = reader.ReadInt32();
		shotgunCharge1Pid = reader.ReadInt32();
		machinegunCharge1Pid = reader.ReadInt32();
		bowCharge1Pid = reader.ReadInt32();
		crossbowCharge1Pid = reader.ReadInt32();
		daggerCharge1Pid = reader.ReadInt32();
		rodCharge1Pid = reader.ReadInt32();
		_1handswordCharge2Pid = reader.ReadInt32();
		_2handswordCharge2Pid = reader.ReadInt32();
		heavyswordCharge2Pid = reader.ReadInt32();
		hammerCharge2Pid = reader.ReadInt32();
		axeCharge2Pid = reader.ReadInt32();
		spearCharge2Pid = reader.ReadInt32();
		polearmCharge2Pid = reader.ReadInt32();
		knuckleCharge2Pid = reader.ReadInt32();
		dartCharge2Pid = reader.ReadInt32();
		gunCharge2Pid = reader.ReadInt32();
		doublegunCharge2Pid = reader.ReadInt32();
		shotgunCharge2Pid = reader.ReadInt32();
		machinegunCharge2Pid = reader.ReadInt32();
		bowCharge2Pid = reader.ReadInt32();
		crossbowCharge2Pid = reader.ReadInt32();
		daggerCharge2Pid = reader.ReadInt32();
		rodCharge2Pid = reader.ReadInt32();
		_1handswordPid = reader.ReadInt32();
		_2handswordPid = reader.ReadInt32();
		heavyswordPid = reader.ReadInt32();
		hammerPid = reader.ReadInt32();
		axePid = reader.ReadInt32();
		spearPid = reader.ReadInt32();
		polearmPid = reader.ReadInt32();
		knucklePid = reader.ReadInt32();
		dartPid = reader.ReadInt32();
		gunPid = reader.ReadInt32();
		doublegunPid = reader.ReadInt32();
		shotgunPid = reader.ReadInt32();
		machinegunPid = reader.ReadInt32();
		bowPid = reader.ReadInt32();
		crossbowPid = reader.ReadInt32();
		daggerPid = reader.ReadInt32();
		rodPid = reader.ReadInt32();
		_1handswordAttackedTiming = reader.ReadInt32();
		_2handswordAttackedTiming = reader.ReadInt32();
		heavyswordAttackedTiming = reader.ReadInt32();
		hammerAttackedTiming = reader.ReadInt32();
		axeAttackedTiming = reader.ReadInt32();
		spearAttackedTiming = reader.ReadInt32();
		polearmAttackedTiming = reader.ReadInt32();
		knuckleAttackedTiming = reader.ReadInt32();
		dartAttackedTiming = reader.ReadInt32();
		gunAttackedTiming = reader.ReadInt32();
		doublegunAttackedTiming = reader.ReadInt32();
		shotgunAttackedTiming = reader.ReadInt32();
		machinegunAttackedTiming = reader.ReadInt32();
		bowAttackedTiming = reader.ReadInt32();
		crossbowAttackedTiming = reader.ReadInt32();
		daggerAttackedTiming = reader.ReadInt32();
		rodAttackedTiming = reader.ReadInt32();
		_1handswordTiming = reader.ReadInt32();
		_2handswordTiming = reader.ReadInt32();
		heavyswordTiming = reader.ReadInt32();
		hammerTiming = reader.ReadInt32();
		axeTiming = reader.ReadInt32();
		spearTiming = reader.ReadInt32();
		polearmTiming = reader.ReadInt32();
		knuckleTiming = reader.ReadInt32();
		dartTiming = reader.ReadInt32();
		gunTiming = reader.ReadInt32();
		doublegunTiming = reader.ReadInt32();
		shotgunTiming = reader.ReadInt32();
		machinegunTiming = reader.ReadInt32();
		bowTiming = reader.ReadInt32();
		crossbowTiming = reader.ReadInt32();
		daggerTiming = reader.ReadInt32();
		rodTiming = reader.ReadInt32();
		_1handswordFulltime = reader.ReadInt32();
		_2handswordFulltime = reader.ReadInt32();
		heavyswordFulltime = reader.ReadInt32();
		hammerFulltime = reader.ReadInt32();
		axeFulltime = reader.ReadInt32();
		spearFulltime = reader.ReadInt32();
		polearmFulltime = reader.ReadInt32();
		knuckleFulltime = reader.ReadInt32();
		dartFulltime = reader.ReadInt32();
		gunFulltime = reader.ReadInt32();
		doublegunFulltime = reader.ReadInt32();
		shotgunFulltime = reader.ReadInt32();
		machinegunFulltime = reader.ReadInt32();
		bowFulltime = reader.ReadInt32();
		crossbowFulltime = reader.ReadInt32();
		daggerFulltime = reader.ReadInt32();
		rodFulltime = reader.ReadInt32();
		xxx = reader.ReadString(reader.ReadUInt16());
	}

	void SkillActionTable::LoadFromFile(const std::filesystem::path& path)
	{
		gamebase::SoxFile fileData(path / "SKILL_ACTION.sox");
		StreamReader reader(fileData.gameData.data(), fileData.gameData.size());

		_vector.reserve(fileData.rowCount);
		for (int32_t i = 0; i < fileData.rowCount; ++i)
		{
			_vector.emplace_back(reader);
		}

		for (const SkillAction& data : _vector)
		{
			_umap[data.index] = &data;
		}
	}

	auto SkillActionTable::Find(int32_t index) const -> const SkillAction*
	{
		auto iter = _umap.find(index);
		return iter != _umap.end() ? iter->second : nullptr;
	}

	auto SkillActionTable::Get() const -> const std::vector<SkillAction>&
	{
		return _vector;
	}
}
