/**********************************************************
         AUTO GENERATED FILE BY sox_code_generator
                   DO NOT EDIT THIS FILE
**********************************************************/
#pragma once
#include <cstdint>
#include <string>
#include <vector>
#include <unordered_map>
#include <filesystem>
#include "lib/game_data/game_data_table.h"

namespace cebreiro { class StreamReader; }

namespace cebreiro::gamedata
{
	struct LevelDiffExp
	{
		LevelDiffExp() = default;
		explicit LevelDiffExp(StreamReader& reader);

		int32_t index = 0;
		int32_t partyLevelDiffFactor01 = 0;
		int32_t partyLevelDiffFactor02 = 0;
		int32_t partyLevelDiffFactor03 = 0;
		int32_t partyLevelDiffFactor04 = 0;
		int32_t partyLevelDiffFactor05 = 0;
		int32_t partyLevelDiffFactor06 = 0;
		int32_t partyLevelDiffFactor07 = 0;
		int32_t partyLevelDiffFactor08 = 0;
		int32_t partyLevelDiffFactor09 = 0;
		int32_t partyLevelDiffFactor10 = 0;
		int32_t partyLevelDiffFactor11 = 0;
		int32_t partyLevelDiffFactor12 = 0;
		int32_t monsterLevelDiffFactor01 = 0;
		int32_t monsterLevelDiffFactor02 = 0;
		int32_t monsterLevelDiffFactor03 = 0;
		int32_t monsterLevelDiffFactor04 = 0;
		int32_t monsterLevelDiffFactor05 = 0;
		int32_t monsterLevelDiffFactor06 = 0;
		int32_t monsterLevelDiffFactor07 = 0;
		int32_t monsterLevelDiffFactor08 = 0;
		int32_t monsterLevelDiffFactor09 = 0;
		int32_t monsterLevelDiffFactor10 = 0;
		int32_t monsterLevelDiffFactor11 = 0;
		int32_t monsterLevelDiffFactor12 = 0;
		int32_t rareItemDiffFactor01 = 0;
		int32_t rareItemDiffFactor02 = 0;
		int32_t rareItemDiffFactor03 = 0;
		int32_t rareItemDiffFactor04 = 0;
		int32_t rareItemDiffFactor05 = 0;
		int32_t rareItemDiffFactor06 = 0;
		int32_t rareItemDiffFactor07 = 0;
		int32_t rareItemDiffFactor08 = 0;
		int32_t rareItemDiffFactor09 = 0;
		int32_t rareItemDiffFactor10 = 0;
		int32_t rareItemDiffFactor11 = 0;
		int32_t rareItemDiffFactor12 = 0;
	};

	class LevelDiffExpTable : public GameDataTable
	{
	public:
		 static constexpr int64_t INDEX = 37;

	public:
		void LoadFromFile(const std::filesystem::path& path);

		auto Find(int32_t index) const -> const LevelDiffExp*;
		auto Get() const -> const std::vector<LevelDiffExp>&;

	private:
		std::vector<LevelDiffExp> _vector;
		std::unordered_map<int32_t, const LevelDiffExp*> _umap;
	};
}
