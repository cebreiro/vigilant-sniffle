/**********************************************************
         AUTO GENERATED FILE BY sox_code_generator
                   DO NOT EDIT THIS FILE
**********************************************************/
#include "levelup_ability.h"

#include "lib/common/stream/stream_reader.h"
#include "lib/game_base/data/sox/sox_file.h"
#include "lib/game_data/game_data_registry.h"

namespace cebreiro::gamedata
{
	[[maybe_unused]]
	static GameDataRegistry<LevelupAbilityTable> registry;

	LevelupAbility::LevelupAbility(StreamReader& reader)
	{
		index = reader.ReadInt32();
		w1Ability = reader.ReadInt32();
		w1Quest = reader.ReadInt32();
		w1Title = reader.ReadString(reader.ReadUInt16());
		w2Ability = reader.ReadInt32();
		w2Quest = reader.ReadInt32();
		w2Title = reader.ReadString(reader.ReadUInt16());
		w3Ability = reader.ReadInt32();
		w3Quest = reader.ReadInt32();
		w3Title = reader.ReadString(reader.ReadUInt16());
		c1Ability = reader.ReadInt32();
		c1Quest = reader.ReadInt32();
		c1Title = reader.ReadString(reader.ReadUInt16());
		c2Ability = reader.ReadInt32();
		c2Quest = reader.ReadInt32();
		c2Title = reader.ReadString(reader.ReadUInt16());
		c3Ability = reader.ReadInt32();
		c3Quest = reader.ReadInt32();
		c3Title = reader.ReadString(reader.ReadUInt16());
		d1Ability = reader.ReadInt32();
		d1Quest = reader.ReadInt32();
		d1Title = reader.ReadString(reader.ReadUInt16());
		d2Ability = reader.ReadInt32();
		d2Quest = reader.ReadInt32();
		d2Title = reader.ReadString(reader.ReadUInt16());
		d3Ability = reader.ReadInt32();
		d3Quest = reader.ReadInt32();
		d3Title = reader.ReadString(reader.ReadUInt16());
		e1Ability = reader.ReadInt32();
		e1Quest = reader.ReadInt32();
		e1Title = reader.ReadString(reader.ReadUInt16());
		e2Ability = reader.ReadInt32();
		e2Quest = reader.ReadInt32();
		e2Title = reader.ReadString(reader.ReadUInt16());
		e3Ability = reader.ReadInt32();
		e3Quest = reader.ReadInt32();
		e3Title = reader.ReadString(reader.ReadUInt16());
		a1Ability = reader.ReadInt32();
		a1Quest = reader.ReadInt32();
		a1Title = reader.ReadString(reader.ReadUInt16());
		a2Ability = reader.ReadInt32();
		a2Quest = reader.ReadInt32();
		a2Title = reader.ReadString(reader.ReadUInt16());
		a3Ability = reader.ReadInt32();
		a3Quest = reader.ReadInt32();
		a3Title = reader.ReadString(reader.ReadUInt16());
	}

	void LevelupAbilityTable::LoadFromFile(const std::filesystem::path& path)
	{
		gamebase::SoxFile fileData(path / "LEVELUP_ABILITY.sox");
		StreamReader reader(fileData.gameData.data(), fileData.gameData.size());

		_vector.reserve(fileData.rowCount);
		for (int32_t i = 0; i < fileData.rowCount; ++i)
		{
			_vector.emplace_back(reader);
		}

		for (const LevelupAbility& data : _vector)
		{
			_umap[data.index] = &data;
		}
	}

	auto LevelupAbilityTable::Find(int32_t index) const -> const LevelupAbility*
	{
		auto iter = _umap.find(index);
		return iter != _umap.end() ? iter->second : nullptr;
	}

	auto LevelupAbilityTable::Get() const -> const std::vector<LevelupAbility>&
	{
		return _vector;
	}
}
