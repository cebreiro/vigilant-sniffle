/**********************************************************
         AUTO GENERATED FILE BY sox_code_generator
                   DO NOT EDIT THIS FILE
**********************************************************/
#pragma once
#include <cstdint>
#include <string>
#include <vector>
#include <unordered_map>
#include <filesystem>
#include "lib/game_data/game_data_table.h"

namespace cebreiro { class StreamReader; }

namespace cebreiro::gamedata
{
	struct MonsterAction
	{
		MonsterAction() = default;
		explicit MonsterAction(StreamReader& reader);

		int32_t index = 0;
		int32_t modelID = 0;
		int32_t bodySize = 0;
		int32_t genFxType = 0;
		int32_t sightRange = 0;
		int32_t chaseRange = 0;
		int32_t canGoOut = 0;
		int32_t domain = 0;
		int32_t characteristic = 0;
		int32_t levelDiffMax = 0;
		int32_t maxEnemy = 0;
		int32_t scanTime = 0;
		int32_t cancelTime = 0;
		int32_t moveRangeMin = 0;
		int32_t moveRangeMax = 0;
		int32_t moveDelayMin = 0;
		int32_t moveDelayMax = 0;
		int32_t moveDelayChase = 0;
		int32_t followship1 = 0;
		int32_t followship2 = 0;
		int32_t followship3 = 0;
		int32_t followship4 = 0;
		int32_t guardID = 0;
		int32_t childID = 0;
		int32_t childSummonDelay = 0;
		int32_t childCount = 0;
		int32_t childSummonFrame = 0;
		int32_t hostileLenFactor = 0;
		int32_t hostileHpFactor = 0;
		int32_t hostileDefFactor = 0;
		float hostileOtherAtt = 0.f;
		int32_t chaseScore = 0;
		int32_t memoryTime = 0;
		int32_t aerialHeight = 0;
		int32_t deadSound = 0;
		int32_t moveSound = 0;
	};

	class MonsterActionTable : public GameDataTable
	{
	public:
		 static constexpr int64_t INDEX = 53;

	public:
		void LoadFromFile(const std::filesystem::path& path);

		auto Find(int32_t index) const -> const MonsterAction*;
		auto Get() const -> const std::vector<MonsterAction>&;

	private:
		std::vector<MonsterAction> _vector;
		std::unordered_map<int32_t, const MonsterAction*> _umap;
	};
}
